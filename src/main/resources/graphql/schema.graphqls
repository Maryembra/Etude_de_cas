scalar Date

type Reservation {
    id: ID
    client: Client
    chambre: Chambre
    dateDebut: Date
    dateFin: Date
    preferences: String
}

type Client {
    id: ID
    nom: String
    prenom: String
    email: String
    telephone: String
}

type Chambre {
    id: ID
    type: String
    prix: Float
    disponible: Boolean
}

type Mutation {
    createReservation(reservationDTO: ReservationDTO): Reservation
    updateReservation(id: ID!, updateReservationDto: UpdateReservationDto): Reservation
    deleteReservation(id: ID!): String
}

type Query {
    getReservations: [Reservation]
    getReservation(id: ID!): Reservation
}

input ReservationDTO {
    idClient: ID!
    idChambre: ID!
    dateDebut: Date!
    dateFin: Date!
    preferences: String
}

input UpdateReservationDto {
    idChambre: ID
    dateDebut: Date
    dateFin: Date
}
